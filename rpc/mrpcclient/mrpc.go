// Code generated by goctl. DO NOT EDIT!
// Source: mrpc.proto

package mrpcclient

import (
	"context"

	"demo/rpc/types/mrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Reply = mrpc.Reply
	Req   = mrpc.Req

	Mrpc interface {
		GetById(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Reply, error)
	}

	defaultMrpc struct {
		cli zrpc.Client
	}
)

func NewMrpc(cli zrpc.Client) Mrpc {
	return &defaultMrpc{
		cli: cli,
	}
}

func (m *defaultMrpc) GetById(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Reply, error) {
	client := mrpc.NewMrpcClient(m.cli.Conn())
	return client.GetById(ctx, in, opts...)
}
